#interface ftdi
adapter driver ftdi
ftdi_device_desc "Digilent USB Device"
ftdi_vid_pid 0x0403 0x6010
ftdi_channel 0
ftdi_layout_init 0x0088 0x008b

#[OS] reset_config none
#ftdi_layout_signal nSRST -oe 0x0020 -data 0x0020



#adapter_khz 15000
adapter speed 15000

transport select jtag

set _CHIPNAME riscv

jtag newtap $_CHIPNAME cpu -irlen 6 -expected-id 0x13631093 -ignore-version
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME riscv -chain-position $_TARGETNAME


#riscv set_reset_timeout_sec 1
#riscv set_command_timeout_sec 1

# So prefer system bus access (SBA).
riscv set_prefer_sba on

# Because JTAG in SweRVolf is tunneled through BSCAN, 
# re-define the IR codes for RISC-V debug registers.
riscv set_ir idcode 0x9
riscv set_ir dmi 0x22
riscv set_ir dtmcs 0x23




#riscv set_ir dtmcs 0x2023
#sleep 1000
#riscv set_ir dtmcs 0x30023


#$_TARGETNAME configure -work-area-phys 0x80000000 -work-area-size 10000 -work-area-backup 1




# Codasip change start --------------------------------------------------

# Part 3: Solution for SW breakpoints with ICACHE enabled

# Expose custom SweRV CSR 
# CSR_MRAC           0x7C0          /* Region access control  */
# CSR_MCPC           0x7C2          /* Core pause control  */
# CSR_DMST           0x7C4          /* Memory synchronization trigger (debug mode only)  */
# CSR_MPMC           0x7C6          /* Power management control  */
# CSR_DICAWICS       0x7C8          /* I-cache array/way/index selection (debug mode only)  */
# CSR_DICAD0         0x7C9          /* I-cache array data 0 (debug mode only)  */
# CSR_DICAD1         0x7CA          /* I-cache array data 1 (debug mode only)  */
# CSR_DICAGO         0x7CB          /* I-cache array go (debug mode only)  */
# CSR_MGPMC          0x7D0          /* Group performance monitor control  */
# CSR_MICECT         0x7F0          /* I-cache error counter/threshold */
# CSR_MICCMECT       0x7F1          /* ICCM correctable error counter/threshold  */
# CSR_MDCCMECT       0x7F2          /* DCCM correctable error counter/threshold  */
# CSR_MCGC           0x7F8          /* Clock gating control  */
# CSR_MFDC           0x7F9          /* Feature disable control  */
# CSR_MDEAU          0xBC0          /* D-Bus error address unlock  */
# CSR_MDSEAC         0xFC0          /* D-bus first error address capture  */
# CSR_MEIPT          0xBC9          /* External interrupts priority threshold  */
# CSR_MEIVT          0xBC8          /* External interrupts vector table  */
# CSR_MEIHAP         0xFC8          /* External interrupts handler address pointer  */
# CSR_MEICPCT        0xBCA          /* External interrupts claim ID / priority level capture trigger  */
# CSR_MEICIDPL       0xBCB          /* External interrupts claim IDs priority level  */
# CSR_MEICURPL       0xBCC          /* External interrupts current priority level  */
# ----------------0x7C0-0x7cB | 0x7D0 | 0x7F0-0x7F2 | 0x7F8-0x7F9 |0xBC0 | 0xFC0 | 0xBC8-0xBC9 | 0xFC8 | 0xBCA-0xBCC
riscv expose_csrs 1984-1995,2000,2032-2034,2040-2041,3008,4032,3016-3017,4040,3018-3021


proc swerv_eh1_execute_fence {} {
    # Execute fence + fence.i via "dmst" register
    reg csr1988 0x3
}

# Configure events hooks in OpenOCD to execute Fence + Fence.i when resuming
# the processor from the debug mode. This is needed for proper operation
# of SW breakpoints when ICACHE in SweRV is enabled:

$_TARGETNAME configure -event resume-start {
    swerv_eh1_execute_fence
}

$_TARGETNAME configure -event step-start {
    # Note: As of Q2/2020, "step-start" event is a new feature in OpenOCD.
    # A very recent version of OpenOCD is needed (upstream commit 25efc150 or newer).
    swerv_eh1_execute_fence
}

# Codasip change end --------------------------------------------------


init

#riscv dmi_read 0x301



#halt
